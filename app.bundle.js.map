{"version":3,"sources":["webpack:///./src/common/actions/calculator.js","webpack:///./src/common/calculations/toPercent.js","webpack:///./src/common/calculations/getTotalDailyAmount.js","webpack:///./src/common/form/percentageDefaultOptions.js","webpack:///./src/common/form/unitOptions.js","webpack:///./src/common/calculations/getMuscleAmount.js","webpack:///./src/common/calculations/getBoneAmount.js","webpack:///./src/common/calculations/getAmountsByPercents.js","webpack:///./src/common/calculations/getAmounts.js","webpack:///./src/common/reducers/calculator.js","webpack:///./src/common/reducers/utils/createMappedReducer.js","webpack:///./src/common/reducers/index.js","webpack:///./src/common/calculations/round.js","webpack:///./src/common/components/calculator/Header2.js","webpack:///./src/common/components/calculator/Section.js","webpack:///./src/common/components/calculator/AmountsTable.js","webpack:///./src/common/components/calculator/BulkHelper.js","webpack:///./src/common/configureStore.js","webpack:///./src/common/components/calculator/WhatToFeed.js","webpack:///./src/common/form/rawMeatyBoneOptions.js","webpack:///./src/common/components/calculator/RawMeatyBone.js","webpack:///./src/common/components/calculator/BasicOptions.js","webpack:///./src/common/components/calculator/PercentageOptions.js","webpack:///./src/common/components/calculator/DogMealCalculator.js","webpack:///./src/common/theme.js","webpack:///./src/common/components/App.js","webpack:///./src/client/index.js"],"names":["updateOptions","weight","maintenance","unitName","type","toPercent","number","getTotalDailyAmount","maintenancePercentage","unitAmount","weightByUnit","totalAmountInOunces","name","value","key","percentageDefaults","barfAdult","muscle","bone","other","liver","organ","veggie","seed","fruit","barfPuppy","pmrAdult","pmrPuppy","fibre","unitData","english","lg","sm","perUnit","metric","getMuscleAmount","total","others","values","reduce","a","b","getMusclePercentage","bonePercentage","otherPercentages","getBoneAmount","amount","bonePercent","rmbPercent","totalAmount","percentages","mapValues","getAmounts","totalDailyAmount","updatedBoneAmount","updatedOtherAmounts","getAmountsByPercents","otherAmounts","boneAmount","muscleAmount","createMappedReducer","initialState","handlers","state","action","handler","unitDetails","musclePercentage","updatedUnitDetails","updatedDailyAmount","updatedBonePercentage","updatedProperty","updatedValue","updatedOtherPercentages","defaultsKey","combineReducers","calculator","round","to","lodashRound","useStyles","makeStyles","theme","h2","fontWeight","margin","spacing","Header2","children","classes","className","propTypes","PropTypes","string","isRequired","section","backgroundColor","padding","marginTop","Section","props","firstRow","table","borderBottom","paddingLeft","paddingRight","paddingBottom","paddingTop","capitalize","textTransform","AmountsTable","title","createCellContent","smallUnitAmount","getCellContentCreator","Table","TableBody","TableRow","TableCell","align","map","object","numericLarge","width","button","justifyContent","height","content","display","BulkHelper","setShowBulkTable","shouldShowBulkTable","useState","numDays","setNumDays","totalAmountUpdated","setTotalUpdatedAmount","boneAmountUpdated","setBoneUpdatedAmount","otherAmountsUpdated","setOtherUpdatedAmount","muscleAmountUpdated","setMuscleUpdatedAmount","useEffect","updatedOther","Fragment","TextField","id","label","onChange","e","Number","target","InputProps","endAdornment","InputAdornment","position","helperText","Button","size","variant","color","onClick","bool","func","preloadedState","middleware","WhatToFeed","settings","useSelector","formControl","rmbOption","rmbCustom","RawMeatyBone","dispatch","useDispatch","customRMB","setCustomRMB","rmbOptions","setRmbOption","updateRMB","FormControl","InputLabel","htmlFor","NativeSelect","optionValue","defaultValue","option","disabled","BasicOptions","roundedDailyAmount","setRoundedDailyAmount","unitOptions","inputProps","min","max","step","numericSmall","buttonWrapper","fontSize","inlineButtonText","PercentageOptions","percentageDefaultOptions","DogMealCalculator","Grid","container","item","xs","md","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","h1","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","App","ThemeProvider","CssBaseline","Container","fixed","store","thunkMiddleware","createStore","rootReducer","applyMiddleware","render","document","getElementById"],"mappings":"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","file":"app.bundle.js","sourcesContent":["export const UPDATE_OPTIONS = 'UPDATE_OPTIONS';\nexport const UPDATE_BONE_PERCENTAGE = 'UPDATE_BONE_PERCENTAGE';\nexport const UPDATE_OTHER_PERCENTAGE = 'UPDATE_OTHER_PERCENTAGE';\nexport const RESET_PERCENTAGE_DEFAULTS = 'RESET_PERCENTAGE_DEFAULTS';\nexport const UPDATE_RMB_PERCENT = 'UPDATE_RMB_PERCENT';\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// BasicOptions\nexport function updateOptions(weight, maintenance, unitName) {\n  return {\n    type: UPDATE_OPTIONS,\n    weight,\n    maintenance,\n    unitName,\n  };\n}\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// PercentageOptions\nexport function updateBonePercentage (updatedBonePercentage)  {\n  return {\n    type: UPDATE_BONE_PERCENTAGE, \n    updatedBonePercentage,\n  };\n}\nexport function updateOtherPercentage(updatedValue, propertyName)  {\n  return {\n    type: UPDATE_OTHER_PERCENTAGE,\n    updatedProperty: propertyName,\n    updatedValue,\n  };\n}\nexport function resetDefaultPercentages (defaultsKey) {\n  return {\n    type: RESET_PERCENTAGE_DEFAULTS,\n    defaultsKey,\n  };\n}\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// RawMeatyBone\nexport function updateRMB(rmbPercent) {\n  return {\n    type: UPDATE_RMB_PERCENT,\n    rmbPercent,\n  };\n}\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n","const toPercent = number => {\n  return number / 100;\n};\n\nexport default toPercent;","import toPercent from './toPercent';\n\nconst getTotalDailyAmount = (weight, maintenancePercentage, unitAmount = 16) => {\n  const weightByUnit = weight * unitAmount;\n  const totalAmountInOunces = weightByUnit * toPercent(maintenancePercentage);\n  return totalAmountInOunces;\n};\n\nexport default getTotalDailyAmount;","export default [\n  { name: 'BARF Adult', value: 'barfAdult', key: 'barf-adult' },\n  { name: 'BARF Puppy', value: 'barfPuppy', key: 'barf-puppy' },\n  { name: 'PMR Adult', value: 'pmrAdult', key: 'pmr-adult' },\n  { name: 'PMR Puppy', value: 'pmrPuppy', key: 'pmr-puppy' },\n];\n\nexport const percentageDefaults = {\n  barfAdult: {\n    muscle: 70,\n    bone: 10,\n    other: {\n      liver: 5,\n      organ: 5,\n      veggie: 7,\n      seed: 2,\n      fruit: 1,\n    }\n  },\n  barfPuppy: {\n    muscle: 58,\n    bone: 17,\n    other: {\n      liver: 7,\n      organ: 7,\n      veggie: 7,\n      seed: 2,\n      fruit: 1,\n    },\n  },\n  pmrAdult: {\n    muscle: 80,\n    bone: 10,\n    other: {\n      liver: 5,\n      organ: 5,\n    },\n  },\n  pmrPuppy: {\n    muscle: 69,\n    bone: 17,\n    other: {\n      liver: 7,\n      organ: 7,\n      fibre: 1,\n    },\n  },\n};\n\n","export default [\n  { name: 'lb / ounce', value: 'english', key: 'english' },\n  { name: 'kg / gram', value: 'metric', key: 'metric' },\n];\n\nexport const unitData = {\n  english: {\n    lg: 'lb',\n    sm: 'oz',\n    perUnit: 16,\n  },\n  metric: {\n    lg: 'kg',\n    sm: 'g',\n    perUnit: 1000,\n  }\n};","import values from 'lodash/values';\n\nconst getMuscleAmount = (total, bone, others) => {\n  const sum = bone + values(others).reduce((a, b) => (a + b), 0);\n  return total - sum;\n};\n\nexport default getMuscleAmount;\n\nexport const getMusclePercentage = (bonePercentage, otherPercentages) => \n  getMuscleAmount(100, bonePercentage, otherPercentages);\n","import toPercent from './toPercent';\n\nconst getBoneAmount = (amount, bonePercent, rmbPercent) => {\n  const newBoneAmount = (amount * toPercent(bonePercent)) / toPercent(rmbPercent);  \n  return newBoneAmount;\n};\n\nexport default getBoneAmount;","import mapValues from 'lodash/mapValues';\nimport toPercent from './toPercent';\n\nconst getAmountByPercent = (amount, percentAmount) => {\n  return amount * toPercent(percentAmount);\n};\n\nexport default (totalAmount, percentages) => \n  mapValues(percentages, value => getAmountByPercent(totalAmount, value));\n\n","import getMuscleAmount from './getMuscleAmount';\nimport getBoneAmount from './getBoneAmount';\nimport getAmountsByPercents from './getAmountsByPercents';\n\nconst getAmounts = (totalDailyAmount, bonePercentage, rmbPercent, otherPercentages) => {\n  const updatedBoneAmount = getBoneAmount(totalDailyAmount, bonePercentage, rmbPercent);\n  const updatedOtherAmounts = getAmountsByPercents(totalDailyAmount, otherPercentages); \n  const updatedMuscleAmount = getMuscleAmount(totalDailyAmount, updatedBoneAmount, updatedOtherAmounts);\n\n  return {\n    otherAmounts: updatedOtherAmounts,\n    boneAmount: updatedBoneAmount,\n    muscleAmount: updatedMuscleAmount,\n  };\n};\n\nexport default getAmounts;","import { \n  UPDATE_OPTIONS,\n  UPDATE_BONE_PERCENTAGE,\n  UPDATE_OTHER_PERCENTAGE,\n  RESET_PERCENTAGE_DEFAULTS,\n  UPDATE_RMB_PERCENT,\n} from '../actions/calculator';\n\nimport createMappedReducer from './utils/createMappedReducer';\nimport getTotalDailyAmount from '../calculations/getTotalDailyAmount';\nimport { percentageDefaults } from '../form/percentageDefaultOptions';\nimport { unitData } from '../form/unitOptions';\nimport { getMusclePercentage } from '../calculations/getMuscleAmount';\nimport getAmounts from '../calculations/getAmounts';\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// INITIAL STATE\nconst initialRMB = 44;\nconst weight = 68;\nconst maintenance = 3.0;\nconst initialUnit = 'english';\nconst totalDailyAmount = getTotalDailyAmount(weight, maintenance, initialUnit.perUnit);\nconst { muscle, bone, other } = percentageDefaults['barfAdult'];\n\nexport const initialState = {\n  unitDetails: unitData[initialUnit],\n  weight,\n  maintenance,\n  totalDailyAmount,\n  rmbPercent: initialRMB,\n  musclePercentage: muscle,\n  bonePercentage: bone,\n  otherPercentages: other,\n  ...getAmounts(totalDailyAmount, bone, initialRMB, other),\n};\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// BasicOptions\nconst updateOptions = (state, action) => {\n  const { otherPercentages, bonePercentage, rmbPercent, unitDetails } = state;\n  const { weight, maintenance, unitName } = action;\n\n  const updatedUnitDetails = unitName ? unitData[unitName] : { ...unitDetails };\n  const updatedDailyAmount = getTotalDailyAmount(weight, maintenance, updatedUnitDetails.perUnit);\n\n  return {\n    ...state,\n    weight,\n    maintenance,\n    unitDetails: updatedUnitDetails,\n    totalDailyAmount: updatedDailyAmount,\n    ...getAmounts(updatedDailyAmount, bonePercentage, rmbPercent, otherPercentages),\n  };\n};\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// PercentageOptions\nexport const updateOtherPercentages = (state, { updatedProperty, updatedValue }) => {\n  const { totalDailyAmount, otherPercentages, bonePercentage, rmbPercent } = state;\n\n  const updatedOtherPercentages = {\n    ...otherPercentages,\n    [updatedProperty]: updatedValue,\n  };\n\n  const updatedMusclePercentage = getMusclePercentage(bonePercentage, updatedOtherPercentages);\n\n  return {\n    ...state,\n    otherPercentages: updatedOtherPercentages,\n    musclePercentage: updatedMusclePercentage,\n    ...getAmounts(totalDailyAmount, bonePercentage, rmbPercent, updatedOtherPercentages),\n  };\n};\n\nconst updateBonePercentage = (state, action) => {\n  const { totalDailyAmount, otherPercentages, rmbPercent } = state;\n  const { updatedBonePercentage } = action;\n  const updatedMusclePercentage = getMusclePercentage(updatedBonePercentage, otherPercentages);\n\n  return {\n    ...state,\n    bonePercentage: updatedBonePercentage,\n    musclePercentage: updatedMusclePercentage,\n    ...getAmounts(totalDailyAmount, updatedBonePercentage, rmbPercent, otherPercentages),\n  };\n};\n\nconst resetPercentages = (state, action) => {\n  const { totalDailyAmount, rmbPercent } = state;\n  const { muscle, bone, other } = percentageDefaults[action.defaultsKey];\n\n  return {\n    ...state,\n    otherPercentages: other,\n    bonePercentage: bone,\n    musclePercentage: muscle,\n    ...getAmounts(totalDailyAmount, bone, rmbPercent, other),\n  };\n};\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// RawMeatyBone\nconst updateRMB = (state, action) => {\n  const { totalDailyAmount, bonePercentage, otherPercentages } = state;\n\n  return {\n    ...state,\n    rmbPercent: action.rmbPercent,\n    ...getAmounts(totalDailyAmount, bonePercentage, action.rmbPercent, otherPercentages),\n  };\n};\n\nexport default createMappedReducer(initialState, {\n  [UPDATE_OPTIONS]: updateOptions,\n  [UPDATE_BONE_PERCENTAGE]: updateBonePercentage,\n  [UPDATE_OTHER_PERCENTAGE]: updateOtherPercentages,\n  [RESET_PERCENTAGE_DEFAULTS]: resetPercentages,\n  [UPDATE_RMB_PERCENT]: updateRMB,\n});","export default function createMappedReducer(initialState, handlers) {\n  return (state = initialState, action) => {\n    const handler = handlers[action.type];\n\n    if (!handler) {\n      return state;\n    }\n\n    return handler(state, action);\n  };\n}\n","import { combineReducers } from 'redux';\nimport calculator from './calculator';\n\nexport default combineReducers({\n  calculator,\n});","import lodashRound from 'lodash/round';\n\n// wrapper for lodash/round that defaults the decimal place to 1\nconst round = (amount, to = 1) => {\n  return lodashRound(amount, to);\n};\n\nexport default round;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  h2: {\n    fontWeight: 400,\n    margin: theme.spacing(1),\n  },\n}));\n\nconst Header2 = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <h2 className={classes.h2}>{children}</h2>\n  );\n};\n\nHeader2.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n\nexport default Header2;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  section: {\n    backgroundColor: 'white',\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(1),\n  },\n}));\n\nconst Section = props => {\n  const classes = useStyles();\n\n  return (<div className={classes.section} {...props} />);\n};\n\nexport default Section;\n","import map from 'lodash/map';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, Table, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport round from '../../calculations/round';\nimport Header2 from './Header2';\nimport Section from './Section';\n\nconst useStyles = makeStyles((theme) => ({\n  firstRow: {\n    fontWeight: 600,\n  },\n  table: {\n    margin: theme.spacing(1),\n    '& > tbody tr td': {\n      borderBottom: '1px solid #eee',\n      paddingLeft: 0,\n      paddingRight: theme.spacing(1),\n      paddingBottom: theme.spacing(.5),\n      paddingTop: theme.spacing(.5),\n    },\n  },\n  capitalize: {\n    textTransform: 'capitalize',\n  },\n}));\n\nconst getCellContentCreator = (unitDetails) => (amount) => {\n  const smallUnitAmount = `${round(amount)} ${unitDetails.sm}`;\n\n  if (amount < unitDetails.perUnit) {\n    return smallUnitAmount;\n  }\n\n  return `${round(amount / unitDetails.perUnit)} ${unitDetails.lg} / ${smallUnitAmount}`;  \n};\n\nconst AmountsTable = ({ \n  totalAmount,\n  muscleAmount,\n  boneAmount,\n  rmbPercent,\n  otherAmounts,\n  unitDetails,\n  title,\n}) => {\n  const classes = useStyles();\n  const createCellContent = getCellContentCreator(unitDetails);\n\n  return (\n    <Section> \n      <Header2>{title}</Header2>\n      <Table className={classes.table}>\n        <TableBody>\n          <TableRow>\n            <TableCell className={classes.firstRow}>Total Amount</TableCell>\n            <TableCell className={classes.firstRow} align=\"right\">{createCellContent(totalAmount)}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Boneless Meat</TableCell>\n            <TableCell align=\"right\">{createCellContent(muscleAmount)}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Raw Meaty Bone at {rmbPercent}%</TableCell>\n            <TableCell align=\"right\">{createCellContent(boneAmount)}</TableCell>\n          </TableRow>\n          {map(otherAmounts, (value, key) => (\n            <TableRow key={key}>\n              <TableCell className={classes.capitalize}>{key}</TableCell>\n              <TableCell align=\"right\">{createCellContent(value)}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Section>\n  );\n};\n\nAmountsTable.propTypes = {\n  totalAmount: PropTypes.number.isRequired,\n  muscleAmount: PropTypes.number.isRequired,\n  boneAmount: PropTypes.number.isRequired,\n  rmbPercent: PropTypes.number.isRequired,\n  otherAmounts: PropTypes.object.isRequired,\n  unitDetails: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default AmountsTable;\n","import mapValues from 'lodash/mapValues';\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AmountsTable from './AmountsTable';\nimport { Button, TextField, InputAdornment, makeStyles } from '@material-ui/core';\nimport Header2 from './Header2';\nimport Section from './Section';\n\nconst useStyles = makeStyles((theme) => ({\n  numericLarge: {\n    margin: theme.spacing(1),\n    width: 110,\n  },\n  button: {\n    justifyContent: 'flex-end',\n    height: 30,\n  },\n  content: {\n    display: 'flex',\n  }\n}));\n\nconst BulkHelper = (props) => {\n  const { \n    totalDailyAmount,\n    muscleAmount,\n    boneAmount,\n    otherAmounts,\n    unitDetails,\n    rmbPercent,\n    setShowBulkTable,\n    shouldShowBulkTable,\n  } = props;\n\n  const classes = useStyles();\n  const [numDays, setNumDays] = useState(7);\n\n  const [totalAmountUpdated, setTotalUpdatedAmount] = useState(totalDailyAmount);\n  const [boneAmountUpdated, setBoneUpdatedAmount] = useState(boneAmount);\n  const [otherAmountsUpdated, setOtherUpdatedAmount] = useState(otherAmounts);\n  const [muscleAmountUpdated, setMuscleUpdatedAmount] = useState(muscleAmount);\n\n  /* eslint ignore react-hooks/exhaustive-deps */\n  useEffect(() => {\n    const updatedOther = mapValues(otherAmounts, value => value * numDays);\n    setTotalUpdatedAmount(totalDailyAmount * numDays);\n    setOtherUpdatedAmount(updatedOther);\n    setBoneUpdatedAmount(boneAmount * numDays);\n    setMuscleUpdatedAmount(muscleAmount * numDays);\n  }, [numDays]);\n\n  return (\n    <React.Fragment>\n      <Section> \n        <Header2>Bulk Helper</Header2>\n        <div className={classes.content}>\n          <TextField\n            className={classes.numericLarge}\n            id=\"numDays\" \n            label=\"How long\"\n            value={numDays}\n            type=\"number\"\n            onChange={e => setNumDays(Number(e.target.value))}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">days</InputAdornment>\n              ),\n            }}\n            helperText=\"minimum of 2 days\"\n          />\n          <Button \n            className={classes.button}\n            size=\"small\"\n            variant=\"outlined\"\n            color=\"secondary\" \n            onClick={() => setShowBulkTable(true)}\n          >\n            Generate\n          </Button>\n        </div>\n      </Section> \n      {shouldShowBulkTable && (numDays > 1) &&\n        <Section> \n          <AmountsTable \n            totalAmount={totalAmountUpdated}\n            muscleAmount={muscleAmountUpdated}\n            boneAmount={boneAmountUpdated}\n            otherAmounts={otherAmountsUpdated}\n            unitDetails={unitDetails}\n            rmbPercent={rmbPercent}\n            title={`Bulk Amounts for ${numDays} days`}\n          />  \n        </Section>\n      }\n    </React.Fragment>\n  );\n};\n\nBulkHelper.propTypes = {\n  totalDailyAmount: PropTypes.number.isRequired,\n  muscleAmount: PropTypes.number.isRequired,\n  boneAmount: PropTypes.number.isRequired,\n  rmbPercent: PropTypes.number.isRequired,\n  otherAmounts: PropTypes.object.isRequired,\n  unitDetails: PropTypes.object.isRequired,\n  shouldShowBulkTable: PropTypes.bool.isRequired,\n  setShowBulkTable: PropTypes.func.isRequired,\n};\n\nexport default BulkHelper;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport default function configureStore(preloadedState) {\n  const middleware = [thunkMiddleware];\n\n  if (process.env.NODE_ENV !== 'production') {\n    const createLogger = require('redux-logger').createLogger;\n    middleware.push(createLogger({ collapsed: true }));\n  }\n\n  const store = createStore(rootReducer, preloadedState, applyMiddleware(...middleware));\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer));\n  }\n\n  return store;\n}","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport AmountsTable from './AmountsTable';\nimport BulkHelper from './BulkHelper';\n\nconst WhatToFeed = () => {\n  const settings = useSelector(state => state.calculator);\n  const { totalDailyAmount, unitDetails, boneAmount, muscleAmount, otherAmounts, rmbPercent } = settings;\n  const [shouldShowBulkTable, setShowBulkTable] = useState(false);\n\n  useEffect(() => {\n    setShowBulkTable(false);\n  }, [totalDailyAmount, boneAmount, otherAmounts]);\n\n  return (\n    <React.Fragment>\n      <AmountsTable \n        totalAmount={totalDailyAmount}\n        muscleAmount={muscleAmount}\n        boneAmount={boneAmount}\n        rmbPercent={rmbPercent}\n        otherAmounts={otherAmounts}\n        unitDetails={unitDetails}\n        title=\"What to feed each day\"\n      />      \n      <BulkHelper\n        totalDailyAmount={totalDailyAmount}\n        muscleAmount={muscleAmount}\n        boneAmount={boneAmount}\n        rmbPercent={rmbPercent}\n        otherAmounts={otherAmounts}\n        unitDetails={unitDetails}\n        shouldShowBulkTable={shouldShowBulkTable}\n        setShowBulkTable={setShowBulkTable}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default WhatToFeed;\n","export default [\n  { name: 'Chicken Back', value: 44, key: 'Chicken-Back' },\n  { name: 'Chicken Breast', value: 20, key: 'Chicken-Breast' },\n  { name: 'Chicken Drumstick', value: 27, key: 'Chicken-Drumstick' },\n  { name: 'Chicken Feet', value: 60, key: 'Chicken-Feet' },\n  { name: 'Chicken Frame', value: 80, key: 'Chicken-Frame' },\n  { name: 'Chicken Leg Quarter', value: 30, key: 'Chicken-Leg-Quarter' },\n  { name: 'Chicken Neck with Skin', value: 36, key: 'Chicken-Neck-with-Skin' },\n  { name: 'Chicken Neck without Skin', value: 50, key: 'Chicken-Neck-without-Skin' },\n  { name: 'Chicken Thigh', value: 21, key: 'Chicken-Thigh' },\n  { name: 'Chicken Whole', value: 32, key: 'Chicken-Whole' },\n  { name: 'Chicken Wings', value: 46, key: 'Chicken-Wings' },\n  { name: 'Duck Foot', value: 60, key: 'Duck-Foot' },\n  { name: 'Duck Frame', value: 80, key: 'Duck-Frame' },\n  { name: 'Duck Neck', value: 50, key: 'Duck-Neck' },\n  { name: 'Duck Whole', value: 28, key: 'Duck-Whole' },\n  { name: 'Duck Wing', value: 39, key: 'Duck-Wing' },\n  { name: 'Pork Feet', value: 30, key: 'Pork-Feet' },\n  { name: 'Pork Ribs', value: 30, key: 'Pork-Ribs' },\n  { name: 'Pork Tail', value: 30, key: 'Pork-Tail' },\n  { name: 'Rabbit Feet', value: 40, key: 'Rabbit-Feet' },\n  { name: 'Rabbit Heads', value: 75, key: 'Rabbit-Heads' },\n  { name: 'Rabbit Whole', value: 28, key: 'Rabbit-Whole' },\n  { name: 'Turkey Neck', value: 45, key: 'Turkey-Neck' },\n  { name: 'Custom', value: 0, key: 'Custom' },\n];","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { \n  FormControl, NativeSelect, InputLabel, InputAdornment, TextField, makeStyles,\n} from '@material-ui/core';\nimport { updateRMB } from '../../actions/calculator';\nimport rmbOptions from '../../form/rawMeatyBoneOptions';\nimport Header2 from './Header2';\nimport Section from './Section';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n  },\n  rmbOption: {\n    margin: theme.spacing(1),\n    width: 115,\n  },\n  rmbCustom: {\n    margin: theme.spacing(1),\n    width: 135,\n  },\n}));\n\nconst RawMeatyBone = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [customRMB, setCustomRMB] = useState(0);\n  const [rmbOption, setRmbOption] = useState(rmbOptions[0].value);\n\n  const onDropDownChange = (e) => {\n    const optionValue = Number(e.target.value);  \n    setCustomRMB(0);\n    setRmbOption(optionValue);\n  };\n\n  /* eslint ignore react-hooks/exhaustive-deps */\n  useEffect(() => {\n    const rmbPercent = (rmbOption === 0) ? customRMB : rmbOption;\n\n    dispatch(updateRMB(rmbPercent));\n  }, [rmbOption, customRMB]);\n  \n  return (\n    <Section>\n      <Header2>Raw Meaty Bone</Header2>    \n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"boneType\">RMB Type</InputLabel>\n        <NativeSelect\n          name=\"boneType\"\n          id=\"boneType\"\n          onChange={onDropDownChange}\n          defaultValue={rmbOptions[0].value}\n        >\n          {rmbOptions.map(option => (\n            <option key={option.key} value={option.value}>{option.name}</option> \n          ))}\n        </NativeSelect>\n      </FormControl>\n      {rmbOption !== 0 &&\n        <TextField\n          className={classes.rmbOption}\n          id=\"rmbOption\" \n          label=\"Bone Content\"\n          value={rmbOption}\n          type=\"number\"\n          disabled\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">%</InputAdornment>\n            ),\n          }}\n        />      \n      }\n      {rmbOption === 0 &&\n        <TextField\n          className={classes.rmbCustom}\n          id=\"customRMB\" \n          label=\"Enter RMB %\"\n          value={customRMB}\n          type=\"number\"\n          onChange={e => setCustomRMB(Number(e.target.value))}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">%</InputAdornment>\n            ),\n          }}\n        />\n      }\n    </Section>\n  );\n};\n\nexport default RawMeatyBone;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { \n  FormControl, NativeSelect, InputLabel, InputAdornment, TextField, makeStyles,\n} from '@material-ui/core';\n\nimport round from '../../calculations/round';\nimport unitOptions from '../../form/unitOptions';\n\nimport { updateOptions } from '../../actions/calculator';\nimport Header2 from './Header2';\nimport Section from './Section';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n  },\n  numericLarge: {\n    margin: theme.spacing(1),\n    width: 110,\n  },\n}));\n\nconst BasicOptions = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const settings = useSelector(state => state.calculator);\n  const { totalDailyAmount, weight, unitDetails, maintenance } = settings;\n\n  const [roundedDailyAmount, setRoundedDailyAmount] = useState(round(totalDailyAmount));\n\n  useEffect(() => {\n    setRoundedDailyAmount(round(totalDailyAmount));\n  }, [totalDailyAmount]);\n\n  return (\n    <Section>\n      <Header2>Options</Header2>     \n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"unit\">Unit</InputLabel>\n        <NativeSelect\n          name=\"unit\"\n          id=\"unit\"\n          onChange={e => dispatch(updateOptions(weight, maintenance, e.target.value))}\n          defaultValue={'english'}\n        >\n          {unitOptions.map(option => (\n            <option key={option.key} value={option.value}>{option.name}</option> \n          ))}\n        </NativeSelect>\n      </FormControl>           \n      <TextField\n        className={classes.numericLarge}\n        id=\"weight\" \n        label=\"Dog Weight\"\n        value={weight}\n        type=\"number\"\n        onChange={e => dispatch(updateOptions(Number(e.target.value), maintenance))}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">{unitDetails.lg}</InputAdornment>\n          ),\n        }}\n      />      \n      <TextField\n        className={classes.numericLarge}\n        id=\"maintenance\" \n        label=\"Maintenance\"\n        value={maintenance}\n        type=\"number\"\n        onChange={e => dispatch(updateOptions(weight, Number(e.target.value)))}\n        helperText=\"Start at 2.0-3.0%\"\n        inputProps={{\n          min: 0,\n          max: 100,\n          step: 0.1,\n        }}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">%</InputAdornment>\n          ),\n        }}\n      />\n      <TextField\n        className={classes.numericLarge}\n        id=\"totalDailyAmount\" \n        label=\"Daily Amount\"\n        value={roundedDailyAmount}\n        type=\"number\"\n        disabled\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">{unitDetails.sm}</InputAdornment>\n          ),\n        }}\n      />  \n    </Section>\n  );\n};\n\nexport default BasicOptions;\n","import map from 'lodash/map';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { InputAdornment, TextField, Button, makeStyles } from '@material-ui/core';\n\nimport percentageDefaultOptions from '../../form/percentageDefaultOptions';\nimport { updateBonePercentage, updateOtherPercentage, resetDefaultPercentages } from '../../actions/calculator';\nimport Header2 from './Header2';\nimport Section from './Section';\n\nconst useStyles = makeStyles((theme) => ({\n  numericSmall: {\n    margin: theme.spacing(1),\n    width: 55,\n  },\n  buttonWrapper: {\n    '& > *': {\n      margin: theme.spacing(0.5),\n      fontSize: 11,\n    },\n  },\n  inlineButtonText: {\n    margin: theme.spacing(1),\n    fontWeight: 300,\n    fontSize: 15,\n  },\n}));\n\nconst PercentageOptions = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { otherPercentages, musclePercentage, bonePercentage } = useSelector(state => state.calculator);\n  return (\n    <Section>\n      <Header2>Desired Percentages</Header2>\n      <div className={classes.buttonWrapper}>\n        <span className={classes.inlineButtonText}>Reset defaults for: </span>\n        {percentageDefaultOptions.map(option => (\n          <Button \n            size=\"small\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            key={option.key} \n            onClick={() => dispatch(resetDefaultPercentages(option.value))}\n          >\n            {option.name}\n          </Button>\n        ))}\n      </div>\n      <TextField\n        className={classes.numericSmall}\n        id=\"musclePercentage\" \n        label=\"Muscle\"\n        value={musclePercentage}\n        type=\"number\"\n        disabled\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">%</InputAdornment>\n          ),\n        }}\n      />\n      <TextField\n        className={classes.numericSmall}\n        id=\"bonePercentage\" \n        label=\"Bone\"\n        value={bonePercentage}\n        type=\"number\"\n        onChange={e => dispatch(updateBonePercentage(Number(e.target.value)))}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">%</InputAdornment>\n          ),\n        }}\n      />\n      {map(otherPercentages, (value, key) => (\n        <TextField\n          className={classes.numericSmall}\n          id={`${key}Percentage`} \n          key={`${key}Percentage`} \n          label={key}\n          value={value}\n          type=\"number\"\n          onChange={e => dispatch(updateOtherPercentage(Number(e.target.value), key))}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">%</InputAdornment>\n            ),\n          }}\n        />        \n      ))}\n    </Section>\n  );\n};\n\nexport default PercentageOptions;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport WhatToFeed from './WhatToFeed';\nimport RawMeatyBone from './RawMeatyBone';\nimport BasicOptions from './BasicOptions';\nimport PercentageOptions from './PercentageOptions';\nimport Header2 from './Header2';\nimport Section from './Section';\n\nconst DogMealCalculator = () => (\n  <Grid container spacing={1}>\n    <Grid item xs={12} md={6}>\n      <Section>\n        <Header2>Dog Raw Food Calculator - Recipe Helper</Header2>\n      </Section>\n      <BasicOptions />\n      <PercentageOptions />\n      <RawMeatyBone />\n    </Grid>\n    <Grid item xs={12} md={6}>\n      <WhatToFeed />\n    </Grid>\n  </Grid>\n);\n\nexport default DogMealCalculator;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#4f5b62',\n      main: '#263238',\n      dark: '#000a12',\n      contrastText: '#ffffff',\n    },\n    secondary: {\n      light: '#98ee99',\n      main: '#66bb6a',\n      dark: '#338a3e',\n      contrastText: '#212121',\n    },\n  },\n  typography: {\n    h1: {\n      fontWeight: 300,\n    },\n    h2: {\n      fontWeight: 300,\n    },\n    h3: {\n      fontWeight: 300,\n    },\n    h4: {\n      fontWeight: 300,\n    },\n    h5: {\n      fontWeight: 300,\n    },\n    h6: {\n      fontWeight: 300,\n    },\n    subtitle1: {\n      fontWeight: 300,\n    },\n    subtitle2: {\n      fontWeight: 300,\n    },\n    body1: {\n      fontWeight: 300,\n    },\n    body2: {\n      fontWeight: 300,\n    },\n    button: {\n      fontWeight: 300,\n    },\n    caption: {\n      fontWeight: 300,\n    },\n    overline: {\n      fontWeight: 300,\n    },\n  },\n});\n\nexport default theme;","import React from \"react\";\nimport { CssBaseline, Container } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport DogMealCalculator from './calculator/DogMealCalculator';\nimport theme from '../theme';\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Container fixed>\n      <DogMealCalculator />\n    </Container>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport configureStore from '../common/configureStore';\nimport App from \"../common/components/App\";\nimport theme from '../common/theme';\n\nconst store = configureStore({});\n\nconst renderApp = () => render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>, \n  document.getElementById(\"app\")\n);\n\nrenderApp();"],"sourceRoot":""}